{"version":3,"sources":["module/index.js","index.js"],"names":["googleAPIScript","apiKey","mapAPIInitiated","mapAPILoaded","mapLoadListeners","window","onGoogleAPILoaded","map","event","checkGoogleMapAPI","callback","document","createElement","type","src","concat","async","defer","body","appendChild","push","GoogleMap","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","loading","noAPIKey","_loadMap","_this2","_this$props","center","zoom","Map","google","maps","mapWrapper","addListener","setState","lat","lng","position","Marker","_this3","_this$props2","className","rest","objectWithoutProperties","_this$state","react_default","a","assign","ref","w","ClassNames","Component","defaultProps","Demo","setMarker","getMapCenter","d","demo","id","src_module","m","value","onChange","_ref","target","onClick","remove","render","src_Demo","getElementById"],"mappings":"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","file":"static/js/main.43008e17.chunk.js","sourcesContent":["/*eslint no-unused-vars: [\"error\", { \"ignoreRestSiblings\": true }]*/\n/* global google */\n\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport ClassNames from \"classnames\";\n\nlet googleAPIScript;\nlet apiKey = \"\";\nlet mapAPIInitiated = false;\nlet mapAPILoaded = false;\nlet mapLoadListeners = [];\n\nwindow.onGoogleAPILoaded = () => {\n  mapLoadListeners.map(event => event());\n  mapAPILoaded = true;\n};\n\nconst checkGoogleMapAPI = callback => {\n  if (apiKey) {\n    if (!mapAPIInitiated) {\n      mapAPIInitiated = true;\n\n      googleAPIScript = document.createElement(\"script\");\n      googleAPIScript.type = \"text/javascript\";\n      googleAPIScript.src = `https://maps.googleapis.com/maps/api/js?key=${apiKey}&callback=onGoogleAPILoaded`;\n      googleAPIScript.async = true;\n      googleAPIScript.defer = true;\n\n      document.body.appendChild(googleAPIScript);\n    }\n\n    if (callback) {\n      if (!mapAPILoaded) {\n        mapLoadListeners.push(callback);\n      } else {\n        callback();\n      }\n    }\n  } else if (callback) {\n    mapLoadListeners.push(callback);\n  }\n};\n\nclass GoogleMap extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { loading: false, noAPIKey: !apiKey };\n\n    checkGoogleMapAPI(() => this._loadMap());\n  }\n\n  _loadMap() {\n    const { center, zoom } = this.props;\n    const { Map } = google.maps;\n\n    this.map = new Map(this.mapWrapper, { center, zoom });\n\n    this.map.addListener(\"idle\", () =>\n      this.setState({ loading: false, noAPIKey: false })\n    );\n  }\n\n  getMapCenter() {\n    if (mapAPILoaded) {\n      const { center } = this.map;\n\n      return { lat: center.lat(), lng: center.lng() };\n    }\n\n    return null;\n  }\n\n  setMarker(position) {\n    if (mapAPILoaded) {\n      const { Marker } = google.maps;\n\n      new Marker({ map: this.map, position });\n    }\n  }\n\n  render() {\n    const { className, center, zoom, ...rest } = this.props;\n    const { loading, noAPIKey } = this.state;\n\n    return (\n      <div\n        ref={w => (this.mapWrapper = w)}\n        className={ClassNames(className, { loading, noAPIKey })}\n        {...rest}\n      />\n    );\n  }\n}\n\nGoogleMap.propTypes = {\n  className: PropTypes.string,\n  center: PropTypes.shape({ lat: PropTypes.number, lng: PropTypes.number }),\n  zoom: PropTypes.number\n};\n\nGoogleMap.defaultProps = {\n  center: { lat: 0, lng: 0 },\n  zoom: 0\n};\n\nexport const setAPIKey = api => {\n  apiKey = api;\n  mapAPIInitiated = false;\n  mapAPILoaded = false;\n\n  if (googleAPIScript) {\n    googleAPIScript.remove();\n  }\n\n  checkGoogleMapAPI();\n};\n\nexport default GoogleMap;\n","import React, { Component } from \"react\";\nimport { render } from \"react-dom\";\n\nimport Map, { setAPIKey } from \"./module\";\n\nimport \"./style.css\";\n\nclass Demo extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { apiKey: \"\" };\n  }\n\n  setMarker() {\n    const { map } = this;\n\n    if (map) {\n      map.setMarker(map.getMapCenter());\n    }\n  }\n\n  render() {\n    const { apiKey } = this.state;\n\n    return (\n      <div ref={d => (this.demo = d)} id=\"demo\">\n        <Map ref={m => (this.map = m)} id=\"map\" />\n        <input\n          id=\"api-key-input\"\n          value={apiKey}\n          onChange={({ target }) => this.setState({ apiKey: target.value })}\n        />\n\n        <div className=\"button\" onClick={() => setAPIKey(apiKey)}>\n          Set API Key\n        </div>\n        <div id=\"marker\" className=\"button\" onClick={() => this.setMarker()}>\n          Set Marker\n        </div>\n      </div>\n    );\n  }\n}\n\nrender(<Demo />, document.getElementById(\"root\"));\n"],"sourceRoot":""}